public class MidtermAct12A {
   private static String series1 = "37107287533902102798797998220837590246510135740250463769376774900097126481248969700780504170182605387432498619952474105947423330951305812372661730962991942213363574161572522430563301811072406154908250230675882075393461711719803104210475137780632466768926167069662363382013637841838368417873436172675728112879812849979408065481931592621691275889832738442742289174325203219235894228767964876702721893184745144573600130643909116721685684458871160315327670386486105843025439939619828917593665686757934951621764571418565606295021572231965867550793241933316490635246274190492910143244581382266334794475817892575867718337217661963751590579239728245598838407582035653253593990084026335689488301894586282278288018119938482628201427819413994056758715117009439035398664372827112653829987240784473053190104293586865155060062958648615320752733719591914205172558297169388870771546649911559348760353292171497005693854370070576826684624621495650076471787294438377604532826541087568284431911906346940378552177792951453612327252500029607107508256381565671088525835072145876576172410976447339110607218265236877223636045174237069058518606604482076212098132878607339694128114266041808683061932846081119106155694051268969251934325451728388641918047049293215058642563049483624672216484350762017279180399446930047329563406911573244438690812579451408905770622942919710792820955037687525678773091862540744969844508330393682126183363848253301546861961243487676812975343759465158038628759287849020152168555482871720121925776695478182833757993103614740356856449095527097864797581167263201004368978425535399209318374414978068609844840309812907779179908821879532736447567559084803087086987551392711854517078544161852424320693150332599594068957565367821070749269665376763262354472106979395067965269474259770973916669376304263398708541052684708299085211399427365734116182760315001271653786073615010808570091499395125570281987460043753582903531743471732693212357815498262974255273730794953759765105305946966067683156574377167401875275889028025717332296191766687138199318110487701902712526768027607800301367868099252546340106163286652636270218540497705585629946580636237993140746255962240744869082311749777923654662572469233228109171419143028819710328859780666976089293863828502533340334413065578016127815921815005561868836468420090470230530811728164304876237919698424872550366387845831148769693215490281042402013833512446218144177347063783299490636259666498587618221225225512486764533677201869716985443124195724099139590089523100588229554825530026352078153229679624948164195386821877476085327132285723110424803456124867697064507995236377742425354112916842768655389262050249103265729672370191327572567528565324825826546309220705859652229798860272258331913126375147341994889534765745501184957014548792889848568277260777137214037988797153829820378303147352772158034814451349137322665138134829543829199918180278916522431027392251122869539409579530664052326325380441000596549391598795936352974615218550237130764225512118369380358038858490341698116222072977186158236678424689157993532961922624679571944012690438771072750481023908955235974572318970677254791506150550495392297953090112996751986188088225875314529584099251203829009407770775672113067397083047244838165338735023408456470580773088295917476714036319800818712901187549131054712658197623331044818386269515456334926366572897563400500428462801835170705278318394258821455212272512503275512160354698120058176216521282765275169129689778932238195734329339946437501907836945765883352399886755061649651847751807381688378610915273579297013376217784275219262340194239963916804498399317331273132924185707147349566916674687634660915035914677504995186714302352196288948901024233251169136196266227326746080059154747183079839286853520694694454072476841822524674417161514036427982273348055556214818971426179103425986472045168939894221798260880768528778364618279934631376775430780936333301898264209010848802521674670883215120185883543223812876952786713296124747824645386369930090493103636197638780396218407357239979422340623539380833965132740801111666627891981488087797941876876144230030984490851411606618262936828367647447792391803351109890697907148578694408955299065364044742557608365997664579509666024396409905389607120198219976047599490197230297649139826800329731560371200413779037855660850892521673093931987275027546890690370753941304265231501194809377245048795150954100921645863754710598436791786391670211874924319957006419179697775990283006991536871371193661495281130587638027841075444973307840789923115535562561142322423255033685442488917353448899115014406480203690680639606723221932041495354150312888033953605329934036800697771065056663195481234880673210146739058568557934581403627822703280826165707739483275922328459417065250945123252306082291880205877731971983945018088807242966198081119777158542502016545090413245809786882778948721859617721078384350691861554356628840622574736922845095162084960398013400172393067166682355524525280460972253503534226472524250874054075591789781264330331690";
   private static String series2 = "15732444386908125794514089057706229429197107928209550376875256787730918625407449698445083303936821261833638482533015468619612434876768129753437594651580386287592878490201521685554828717201219257766954781828337579931036147403568564490955270978647975811672632010043689784255353992093183744149780686098448403098129077791799088218795327364475675590848030870869875513927118545170785441618524243206931503325995940689575653678210707492696653767632623544721069793950679652694742597709739166693763042633987085410526847082990852113994273657341161827603150012716537860736150108085700914993951255702819874600437535829035317434717326932123578154982629742552737307949537597651053059469660676831565743771674018752758890280257173322961917666871381993181104877019027125267680276078003013678680992525463401061632866526362702185404977055856299465806362379931407462559622407448690823117497779236546625724692332281091714191430288197103288597806669760892938638285025333403344130655780161278159218150055618688364684200904702305308117281643048762379196984248725503663878458311487696932154902810424020138335124462181441773470637832994906362596664985876182212252255124867645336772018697169854431241957240991395900895231005882295548255300263520781532296796249481641953868218774760853271322857231104248034561248676970645079952363777424253541129168427686553892620502491032657296723701913275725675285653248258265463092207058596522297988602722583319131263751473419948895347657455011849570145487928898485682772607771372140379887971538298203783031473527721580348144513491373226651381348295438291999181802789165224310273922511228695394095795306640523263253804410005965493915987959363529746152185502371307642255121183693803580388584903416981162220729771861582366784246891579935329619226246795719440126904387710727504810239089552359745723189706772547915061505504953922979530901129967519861880882258753145295840992512038290094077707756721130673970830472448381653387350234084564705807730882959174767140363198008187129011875491310547126581976233310448183862695154563349263665728975634005004284628018351707052783183942588214552122725125032755121603546981200581762165212827652751691296897789322381957343293399464375019078369457658833523998867550616496518477518073816883786109152735792970133762177842752192623401942399639168044983993173312731329241857071473495669166746876346609150359146775049951867143023521962889489010242332511691361962662273267460800591547471830798392868535206946944540724768418225246744171615140364279822733480555562148189714261791034259864720451689398942217982608807685287783646182799346313767754307809363333018982642090108488025216746708832151201858835432238128769527867132961247478246453863699300904931036361976387803962184073572399794223406235393808339651327408011116666278919814880877979418768761442300309844908514116066182629368283676474477923918033511098906979071485786944089552990653640447425576083659976645795096660243964099053896071201982199760475994901972302976491398268003297315603712004137790378556608508925216730939319872750275468906903707539413042652315011948093772450487951509541009216458637547105984367917863916702118749243199570064191796977759902830069915368713711936614952811305876380278410754449733078407899231155355625611423224232550336854424889173534488991150144064802036906806396067232219320414953541503128880339536053299340368006977710650566631954812348806732101467390585685579345814036278227032808261657077394832759223284594170652509451232523060822918802058777319719839450180888072429661980811197771585425020165450904132458097868827789487218596177210783843506918615543566288406225747369228450951620849603980134001723930671666823555245252804609722535035342264725242508740540755917897812643303316903710728753390210279879799822083759024651013574025046376937677490009712648124896970078050417018260538743249861995247410594742333095130581237266173096299194221336357416157252243056330181107240615490825023067588207539346171171980310421047513778063246676892616706966236338201363784183836841787343617267572811287981284997940806548193159262169127588983273844274228917432520321923589422876796487670272189318474514457360013064390911672168568445887116031532767038648610584302543993961982891759366568675793495162176457141856560629502157223196586755079324193331649063524627419049291014324458138226633479447581789257586771833721766196375159057923972824559883840758203565325359399008402633568948830189458628227828801811993848262820142781941399405675871511700943903539866437282711265382998724078447305319010429358686515506006295864861532075273371959191420517255829716938887077154664991155934876035329217149700569385437007057682668462462149565007647178729443837760453282654108756828443191190634694037855217779295145361232725250002960710750825638156567108852583507214587657617241097644733911060721826523687722363604517423706905851860660448207621209813287860733969412811426604180868306193284608111910615569405126896925193432545172838864191804704929321505864256304948362467221648435076201727918039944693004732956340691";
   
   public static void main(String...args) {
      // countAppearance();
      // getOddAndEven();
      
      reverseSeries();
      getEvenSum();
   }
   
   public static void countAppearance() {
      System.out.println("Character Appearance Count: ");
      
      int counter[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
      int size = series1.length();
      
      for (int index = 0; index < size; index++)
         counter[Character.getNumericValue(series1.charAt(index))]++;
      
      for (int index = 0; index < counter.length; index++)
         System.out.print("[" + index + "]:" + counter[index] + "\t");
   }
   
   public static void reverseSeries() {
      // Array na pamaagi
      /*int[] reversedArray = new int[series2.length()];
      int reverseIndex = 0;
      
      for (int index = series2.length() - 1; index >= 0; index--) {
         reversedArray[reverseIndex] = Character.getNumericValue(series2.charAt(index));
         reverseIndex++;
      }
      
      for (int index = 0; index < reversedArray.length; index++)
         System.out.print(reversedArray[index]);*/
         
      // String na pamaagi
      for (int index = series2.length() - 1; index >=0; index--)
         System.out.print(series2.charAt(index));
   }
   
   public static void getEvenSum() {
      long sum = 0;
      
      for (int index = 0; index < series2.length(); index++) {
         int current = Character.getNumericValue(series2.charAt(index));
         
         if (current % 2 == 0 && current != 0)
            sum += current;   
      }
      
      System.out.println("\n\nSum of Even: " + sum);
   }
   
   public static void getOddAndEven() {
      int odd = 0;
      int even = 0;
      
      for (int index = 0; index < series1.length(); index++) {
         int current = Character.getNumericValue(series1.charAt(index));
         boolean isZero = current == 0;
         boolean isEven = current % 2 == 0;
         
         if (isEven && !isZero)
            even++;
         else if (!isZero)
            odd++;
      }
      
      System.out.println("\n\nEven: " + even);
      System.out.println("\nOdd: " + odd);
   }
}